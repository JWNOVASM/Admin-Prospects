function prospect_profile_page() {
    if (!current_user_can('administrator') && !current_user_can('account_manager')) {
        return 'You do not have permission to view this page.';
    }

    if (!isset($_GET['prospect_id'])) {
        return 'Invalid prospect ID.';
    }

    $prospect_id = intval($_GET['prospect_id']);
    global $wpdb;
    $table_name = $wpdb->prefix . 'prospects';
    $prospect = $wpdb->get_row($wpdb->prepare("SELECT * FROM $table_name WHERE id = %d", $prospect_id));

    if (!$prospect) {
        return 'Prospect not found.';
    }

    $current_user = wp_get_current_user();
    $account_manager_id = $prospect->account_manager_id; // Use correct field

    if (in_array('account_manager', $current_user->roles) && $current_user->ID != $account_manager_id) {
        return 'You do not have permission to view this prospect.';
    }

    $account_manager = get_userdata($account_manager_id);
    $account_manager_name = $account_manager ? $account_manager->first_name . ' ' . $account_manager->last_name : 'Unassigned';

    $last_note = $wpdb->get_row($wpdb->prepare("SELECT timestamp FROM {$wpdb->prefix}prospect_notes WHERE prospect_id = %d ORDER BY timestamp DESC LIMIT 1", $prospect_id));
    $last_updated = $last_note ? $last_note->timestamp : $prospect->last_updated;

    ob_start();
    ?>
    <div class="prospect-profile">
        <h2><?php echo esc_html($prospect->name); ?></h2>
        <p><strong>Instagram:</strong> <a href="https://www.instagram.com/<?php echo esc_html($prospect->instagram); ?>" target="_blank"><?php echo esc_html($prospect->instagram); ?></a></p>
        <p><strong>Email:</strong> <a href="mailto:<?php echo esc_html($prospect->email); ?>"><?php echo esc_html($prospect->email); ?></a></p>
        <p><strong>Phone:</strong> <a href="tel:<?php echo esc_html($prospect->phone); ?>"><?php echo esc_html($prospect->phone); ?></a></p>
        <p><strong>Client Type:</strong>
            <select id="prospect_client_type" data-old-value="<?php echo esc_html($prospect->client_type); ?>">
                <option value="Lash Technician" <?php selected($prospect->client_type, 'Lash Technician'); ?>>Lash Technician</option>
                <option value="Salon Owner" <?php selected($prospect->client_type, 'Salon Owner'); ?>>Salon Owner</option>
                <option value="Salon Business" <?php selected($prospect->client_type, 'Salon Business'); ?>>Salon Business</option>
                <option value="Other" <?php selected($prospect->client_type, 'Other'); ?>>Other</option>
            </select>
        </p>
        <p><strong>Prospect Type:</strong>
            <select id="prospect_prospect_type" data-old-value="<?php echo esc_html($prospect->prospect_type); ?>">
                <option value="Customer" <?php selected($prospect->prospect_type, 'Customer'); ?>>Customer</option>
                <option value="Brand Partner" <?php selected($prospect->prospect_type, 'Brand Partner'); ?>>Brand Partner</option>
                <option value="Salon Partner" <?php selected($prospect->prospect_type, 'Salon Partner'); ?>>Salon Partner</option>
                <option value="Other" <?php selected($prospect->prospect_type, 'Other'); ?>>Other</option>
            </select>
        </p>
        <p><strong>Status:</strong> 
            <select id="prospect_status" data-old-value="<?php echo esc_html($prospect->status); ?>">
                <option value="Not engaged" <?php selected($prospect->status, 'Not engaged'); ?>>Not engaged</option>
                <option value="Engaged" <?php selected($prospect->status, 'Engaged'); ?>>Engaged</option>
            </select>
        </p>
        <p><strong>Temperature:</strong> 
            <select id="prospect_temperature" data-old-value="<?php echo esc_html($prospect->temperature); ?>">
                <option value="Cold" <?php selected($prospect->temperature, 'Cold'); ?>>Cold</option>
                <option value="Warm" <?php selected($prospect->temperature, 'Warm'); ?>>Warm</option>
                <option value="Hot" <?php selected($prospect->temperature, 'Hot'); ?>>Hot</option>
            </select>
        </p>
        <p><strong>Last Updated:</strong> <?php echo esc_html($last_updated); ?></p>
        <p><strong>Account Manager:</strong> 
            <?php if (current_user_can('administrator')): ?>
                <select id="prospect_account_manager" data-old-value="<?php echo esc_html($prospect->account_manager_id); ?>">
                    <option value="0" <?php selected($prospect->account_manager_id, 0); ?>>Unassigned</option>
                    <?php
                    $users = get_users(array('role' => 'account_manager'));
                    foreach ($users as $user) {
                        echo '<option value="' . esc_html($user->ID) . '" ' . selected($prospect->account_manager_id, $user->ID, false) . '>' . esc_html($user->first_name . ' ' . $user->last_name) . '</option>';
                    }
                    ?>
                </select>
            <?php else: ?>
                <?php echo esc_html($account_manager_name); ?>
            <?php endif; ?>
        </p>
        <h3>Notes</h3>
        <div class="prospect-notes" style="max-height: 100px; overflow-y: scroll;">
            <?php echo do_shortcode('[prospect_notes prospect_id="' . $prospect_id . '"]'); ?>
        </div>
        <form id="add_note_form">
            <textarea name="note" placeholder="Add a note" required></textarea>
            <input type="hidden" name="prospect_id" value="<?php echo esc_attr($prospect_id); ?>">
            <input type="hidden" name="nonce" value="<?php echo wp_create_nonce('add_note_nonce'); ?>">
            <button type="submit">Add Note</button>
        </form>
        <button id="return_to_prospects" onclick="window.location.href='https://kliko.co.uk/admin/prospects';">Return to prospects</button>
    </div>
    <script>
		jQuery(document).ready(function($) {
			$('#add_note_form').on('submit', function(event) {
				event.preventDefault();
				var formData = $(this).serialize();
				$.post('<?php echo admin_url('admin-ajax.php'); ?>', formData + '&action=add_prospect_note', function(response) {
					location.reload();
				});
			});

			// Update status, temperature, and account manager
			$('#prospect_status, #prospect_temperature, #prospect_account_manager, #prospect_client_type, #prospect_prospect_type').change(function() {
				var select = $(this);
				var oldValue = select.data('old-value');
				var newValue = select.val();
				var field = select.attr('id').replace('prospect_', '');
				var fieldName = select.prev('strong').text().replace(':', '');

				if (oldValue !== newValue) {
					var formData = {
						action: 'update_prospect_field',
						prospect_id: <?php echo $prospect_id; ?>,
						field: field,
						value: newValue,
						nonce: '<?php echo wp_create_nonce('update_prospect_nonce'); ?>'
					};

					$.post('<?php echo admin_url('admin-ajax.php'); ?>', formData, function(response) {
						if (response === 'success') {
							var oldName = oldValue === '0' ? 'Unassigned' : $('#prospect_account_manager option[value="' + oldValue + '"]').text();
							var newName = newValue === '0' ? 'Unassigned' : $('#prospect_account_manager option[value="' + newValue + '"]').text();
							var noteText = '<?php echo $current_user->display_name; ?> changed ' + fieldName + ' from ' + oldName + ' to ' + newName;
							$.post('<?php echo admin_url('admin-ajax.php'); ?>', {
								action: 'add_prospect_note',
								prospect_id: <?php echo $prospect_id; ?>,
								note: noteText,
								nonce: '<?php echo wp_create_nonce('add_note_nonce'); ?>'
							}, function(noteResponse) {
								location.reload();
							});
						}
					});
				}
			});

			// Delete notes (only for administrators)
			$('.prospect-notes').on('click', '.delete-note', function() {
				if (confirm('Are you sure you want to delete this note?')) {
					var noteId = $(this).data('note-id');
					var nonce = '<?php echo wp_create_nonce('delete_note_nonce'); ?>';

					$.post('<?php echo admin_url('admin-ajax.php'); ?>', {
						action: 'delete_prospect_note',
						note_id: noteId,
						nonce: nonce
					}, function(response) {
						location.reload();
					});
				}
			});

			// Scroll to the bottom of the notes container by default
			var notesContainer = $('.prospect-notes');
			if (notesContainer[0].scrollHeight > notesContainer.height()) {
				notesContainer.scrollTop(notesContainer[0].scrollHeight);
			}
		});
	</script>
    <?php
    return ob_get_clean();
}
add_shortcode('prospect_profile', 'prospect_profile_page');

function add_prospect_note() {
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'add_note_nonce')) {
        die('Invalid nonce');
    }

    $prospect_id = intval($_POST['prospect_id']);
    $note = sanitize_textarea_field($_POST['note']);
    $user = wp_get_current_user();

    global $wpdb;
    $table_name = $wpdb->prefix . 'prospect_notes';
    $wpdb->insert($table_name, [
        'prospect_id' => $prospect_id,
        'note' => $note,
        'user' => $user->user_login,
        'timestamp' => current_time('mysql')
    ]);

    echo 'Note added successfully';
    wp_die();
}
add_action('wp_ajax_add_prospect_note', 'add_prospect_note');

function delete_prospect_note() {
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'delete_note_nonce')) {
        die('Invalid nonce');
    }

    $note_id = intval($_POST['note_id']);

    global $wpdb;
    $table_name = $wpdb->prefix . 'prospect_notes';
    $wpdb->delete($table_name, ['id' => $note_id]);

    echo 'Note deleted successfully';
    wp_die();
}
add_action('wp_ajax_delete_prospect_note', 'delete_prospect_note');

function display_prospect_notes($atts) {
    $prospect_id = intval($atts['prospect_id']);
    global $wpdb;
    $table_name = $wpdb->prefix . 'prospect_notes';
    $notes = $wpdb->get_results($wpdb->prepare("SELECT * FROM $table_name WHERE prospect_id = %d ORDER BY timestamp ASC", $prospect_id));

    ob_start();
    if (!empty($notes)) {
        echo '<ul class="prospect-notes">';
        foreach ($notes as $note) {
            $note_class = (strpos($note->note, 'changed') !== false) ? 'system-generated' : '';
            echo '<li class="' . $note_class . '">';
            echo '<strong>' . esc_html($note->user) . ':</strong> ';
            echo esc_html($note->note);
            echo ' <em>(' . esc_html($note->timestamp) . ')</em>';
            if (current_user_can('administrator')) {
                echo ' <button class="delete-note" data-note-id="' . esc_html($note->id) . '">Delete</button>';
            }
            echo '</li>';
        }
        echo '</ul>';
    } else {
        echo '<p>No notes available.</p>';
    }
    return ob_get_clean();
}
add_shortcode('prospect_notes', 'display_prospect_notes');

function update_prospect_field() {
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'update_prospect_nonce')) {
        die('Invalid nonce');
    }

    $prospect_id = intval($_POST['prospect_id']);
    $field = sanitize_text_field($_POST['field']);
    $value = sanitize_text_field($_POST['value']);

    if ($field == 'account_manager') {
        $field = 'account_manager_id';
        $value = intval($value);
    }

    global $wpdb;
    $table_name = $wpdb->prefix . 'prospects';
    $result = $wpdb->update($table_name, [$field => $value], ['id' => $prospect_id]);

    if ($result !== false) {
        echo 'success';
    } else {
        echo 'error';
    }
    wp_die();
}
add_action('wp_ajax_update_prospect_field', 'update_prospect_field');
