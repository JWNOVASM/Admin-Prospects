function prospect_profile_page() {
    if (!current_user_can('administrator') && !current_user_can('account_manager')) {
        return 'You do not have permission to view this page.';
    }

    if (!isset($_GET['prospect_id'])) {
        return 'Invalid prospect ID.';
    }

    $prospect_id = intval($_GET['prospect_id']);
    global $wpdb;
    $table_name = $wpdb->prefix . 'prospects';
    $prospect = $wpdb->get_row($wpdb->prepare("SELECT * FROM $table_name WHERE id = %d", $prospect_id));

    if (!$prospect) {
        return 'Prospect not found.';
    }

    $current_user = wp_get_current_user();
    $account_manager_id = get_user_meta($prospect->id, 'assigned_account_manager', true); // Corrected property name

    if (in_array('account_manager', $current_user->roles) && $current_user->ID != $account_manager_id) {
        return 'You do not have permission to view this prospect.';
    }

    $account_manager = get_userdata($account_manager_id);
    $account_manager_name = $account_manager ? $account_manager->first_name . ' ' . $account_manager->last_name : 'N/A';

    ob_start();
    ?>
    <div class="prospect-profile">
        <h2><?php echo esc_html($prospect->name); ?></h2>
        <p><strong>Instagram:</strong> <a href="https://www.instagram.com/<?php echo esc_html($prospect->instagram); ?>" target="_blank"><?php echo esc_html($prospect->instagram); ?></a></p>
        <p><strong>Email:</strong> <a href="mailto:<?php echo esc_html($prospect->email); ?>"><?php echo esc_html($prospect->email); ?></a></p>
        <p><strong>Phone:</strong> <a href="tel:<?php echo esc_html($prospect->phone); ?>"><?php echo esc_html($prospect->phone); ?></a></p>
        <p><strong>Client Type:</strong> <?php echo esc_html($prospect->client_type); ?></p>
        <p><strong>Prospect Type:</strong> <?php echo esc_html($prospect->prospect_type); ?></p>
        <p><strong>Status:</strong> <?php echo esc_html($prospect->status); ?></p>
        <p><strong>Temperature:</strong> <?php echo esc_html($prospect->temperature); ?></p>
        <p><strong>Last Updated:</strong> <?php echo esc_html($prospect->last_updated); ?></p>
        <p><strong>Account Manager:</strong> <?php echo esc_html($prospect->account_manager); ?></p>
        <h3>Notes</h3>
        <div class="prospect-notes">
            <?php echo do_shortcode('[prospect_notes prospect_id="' . $prospect_id . '"]'); ?>
        </div>
        <form id="add_note_form">
            <textarea name="note" placeholder="Add a note" required></textarea>
            <input type="hidden" name="prospect_id" value="<?php echo esc_attr($prospect_id); ?>">
            <input type="hidden" name="nonce" value="<?php echo wp_create_nonce('add_note_nonce'); ?>"> <!-- Added nonce field -->
            <button type="submit">Add Note</button>
        </form>
    </div>
    <script>
        jQuery(document).ready(function($) {
            $('#add_note_form').on('submit', function(event) {
                event.preventDefault();
                var formData = $(this).serialize();
                $.post('<?php echo admin_url('admin-ajax.php'); ?>', formData + '&action=add_prospect_note', function(response) {
                    alert(response);
                    location.reload();
                });
            });
        });
    </script>
    <?php
    return ob_get_clean();
}
add_shortcode('prospect_profile', 'prospect_profile_page');

function add_prospect_note() {
    // Verify nonce for security
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'add_note_nonce')) {
        die('Invalid nonce');
    }

    // Sanitize and validate input data
    $prospect_id = intval($_POST['prospect_id']);
    $note = sanitize_textarea_field($_POST['note']);
    $user = wp_get_current_user();

    // Insert note into the database
    global $wpdb;
    $table_name = $wpdb->prefix . 'prospect_notes';
    $wpdb->insert($table_name, [
        'prospect_id' => $prospect_id,
        'note' => $note,
        'user' => $user->user_login,
        'timestamp' => current_time('mysql')
    ]);

    echo 'Note added successfully';
    wp_die();
}
add_action('wp_ajax_add_prospect_note', 'add_prospect_note');

function display_prospect_notes($atts) {
    $prospect_id = intval($atts['prospect_id']);
    global $wpdb;
    $table_name = $wpdb->prefix . 'prospect_notes';
    $notes = $wpdb->get_results($wpdb->prepare("SELECT * FROM $table_name WHERE prospect_id = %d ORDER BY timestamp DESC", $prospect_id));

    ob_start();
    if (!empty($notes)) {
        echo '<ul class="prospect-notes">';
        foreach ($notes as $note) {
            echo '<li>';
            echo '<strong>' . esc_html($note->user) . ':</strong> ';
            echo esc_html($note->note);
            echo ' <em>(' . esc_html($note->timestamp) . ')</em>';
            echo '</li>';
        }
        echo '</ul>';
    } else {
        echo '<p>No notes available.</p>';
    }
    return ob_get_clean();
}
add_shortcode('prospect_notes', 'display_prospect_notes');
